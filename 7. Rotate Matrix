Problem Statement

Given a 2-dimensional matrix of size ‘N’ x ‘M’, rotate the elements of the matrix clockwise.
For example: 
Input Matrix: [ [ 1, 2, 3 ] 
                [ 4, 5, 6 ] 
                [ 7, 8, 9 ] ]

Output Matrix: [ [ 4, 1, 2 ] 
                 [ 7, 5, 3 ] 
                 [ 8, 9, 6 ] ]

The output matrix is generated by rotating the elements of the input matrix in a clockwise direction. Note that every element is rotated only once. 
Note :
You do not need to print anything; it has already been taken care of. Also, update the given matrix in-place.
Detailed explanation ( Input/output format, Notes, Images )

Constraints :
1 <= T <= 10
1 <= N, M <= 100
-10^5 <= data <= 10^5,

where ‘T’ is the number of test cases,  ‘N’ and ‘M’ are the numbers of rows and columns respectively and ‘data’ is the value of the elements of the matrix.
Sample Input 1 :
1
4 4
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
Sample Output 1 :
5 1 2 3
9 10 6 4
13 11 7 8
14 15 16 12
Explanation Of Sample Input 1 :


The resulting matrix after rotating the given matrix clockwise is shown above. 
Sample Input 2 :
2
2 2
1 3
4 5
3 3
3 4 5
5 6 7
8 10 20
Sample Output 2 :
4 1
5 3
5 3 4
8 6 5
10 20 7 

Solution:-

#include <bits/stdc++.h>
void rotateMatrix(vector<vector<int>> &mat, int n, int m)
{
    // Write your code here
    int left = 0, right = m-1, top  = 0, bottom = n-1;
    while(left < right && top < bottom ){
          int temp = mat[top][left];
          for(int col = left+1; col <= right; col++){
             int k = mat[top][col];
             mat[top][col] = temp;
             temp = k;
          }
          top++;
          for(int row = top; row <= bottom; row++){
              int k = mat[row][right];
              mat[row][right] = temp;
              temp = k;
          }
          right--;
          for(int col = right; col >= left; col--){
                  int k = mat[bottom][col];
                  mat[bottom][col] = temp;
                  temp = k;                                                                                                                                                                                                 }
                  bottom--;
                  for (int row =bottom;row >=top;row--) {
                    int k = mat[row][left];                                                                                                                                                                                                        mat[row]
                    [left] = temp;
                    temp = k;
                  }
              left++;
              mat[top - 1] [left - 1] = temp;
          }
}
